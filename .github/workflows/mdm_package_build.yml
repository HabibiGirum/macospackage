name: Build and Package osquery

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: hosted-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

env:
  PACKAGING_REPO: https://github.com/osquery/osquery-packaging
  PACKAGING_COMMIT: 4caa2c54f0d893c1efa47932571046bbce156c52
  SUBMODULE_CACHE_VERSION: 2

jobs:
  build_macos:
    runs-on: macos-12
    strategy:
      matrix:
        build_type: [Release, Debug]
        architecture: [x86_64, arm64]
        exclude:
          - build_type: Debug
            architecture: arm64

    steps:
      - name: Checkout osquery repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.2'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          brew install ccache flex bison coreutils gnu-sed
          pip3 install setuptools pexpect==3.3 psutil timeout_decorator six thrift==0.11.0 osquery

      - name: Install CMake
        run: |
          ./tools/ci/scripts/macos/install_cmake.sh "workspace/downloads" "workspace/install" "3.21.4"

      - name: Configure and build osquery
        run: |
          mkdir -p workspace/build
          cd workspace/build
          cmake -G "Unix Makefiles" \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_OSX_ARCHITECTURES="${{ matrix.architecture }}" \
            -DCMAKE_OSX_DEPLOYMENT_TARGET="10.15" \
            -DCMAKE_BUILD_TYPE="${{ matrix.build_type }}" \
            -DOSQUERY_BUILD_TESTS=ON \
            ../..
          cmake --build . -j $(($(sysctl -n hw.logicalcpu) + 1)

      - name: Run tests
        if: matrix.architecture == 'x86_64'
        run: |
          cd workspace/build
          ctest --build-nocmake -V

      - name: Package osquery
        run: |
          cd workspace/build
          cmake --build . --target package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: osquery-macos-${{ matrix.architecture }}-${{ matrix.build_type }}
          path: workspace/build/*.pkg

  build_linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        build_type: [Release, RelWithDebInfo, Debug]

    steps:
      - name: Checkout osquery repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.2'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache flex bison build-essential gcc g++

      - name: Install CMake
        run: |
          ./tools/ci/scripts/linux/install_cmake.sh "workspace/downloads" "workspace/install" "3.21.4"

      - name: Configure and build osquery
        run: |
          mkdir -p workspace/build
          cd workspace/build
          cmake -G "Unix Makefiles" \
            -DCMAKE_BUILD_TYPE="${{ matrix.build_type }}" \
            -DOSQUERY_BUILD_TESTS=ON \
            ../..
          cmake --build . -j $(($(nproc) + 1))

      - name: Run tests
        run: |
          cd workspace/build
          ctest --build-nocmake -V

      - name: Package osquery
        run: |
          cd workspace/build
          cmake --build . --target package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: osquery-linux-${{ matrix.build_type }}
          path: workspace/build/*.deb

  build_windows:
    runs-on: windows-2019
    strategy:
      matrix:
        build_type: [Release]
        bitness: [64, arm64]

    steps:
      - name: Checkout osquery repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.2'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          pip3 install setuptools pexpect==3.3 psutil timeout_decorator six thrift==0.11.0 osquery pywin32

      - name: Install CMake
        run: |
          ./tools/ci/scripts/windows/install_cmake.ps1 "workspace/downloads" "workspace/install" "3.21.4"

      - name: Configure and build osquery
        run: |
          mkdir -p workspace/build
          cd workspace/build
          cmake -G "Ninja" \
            -DCMAKE_BUILD_TYPE="${{ matrix.build_type }}" \
            -DOSQUERY_BUILD_TESTS=ON \
            ../..
          cmake --build . -j 3

      - name: Run tests
        if: matrix.bitness != 'arm64'
        run: |
          cd workspace/build
          ctest --build-nocmake -C Release -V

      - name: Package osquery
        run: |
          cd workspace/build
          cmake --build . --target package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: osquery-windows-${{ matrix.bitness }}-${{ matrix.build_type }}
          path: workspace/build/*.msi